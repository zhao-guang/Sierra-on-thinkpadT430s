#graphics_Rename-VID_AGP1.txt修改所有VID道IGPU 包括——SB/PCI0/VID SB/PCI0/PEG/VID

在SB/PCI0/IGPU注入ID 和亮度调节代码         

Method (_DSM, 4, NotSerialized)
                {
                    If (LEqual (Arg2, Zero))
                    {
                        Return (Buffer (One)
                        {
                            0x03
                        })
                    }

                    Return (Package (0x04)
                    {
                        "AAPL,ig-platform-id", 
                        Buffer (0x04)
                        {
                            0x04, 0x00, 0x66, 0x01
                        }, 

                        "hda-gfx", 
                        Buffer (0x0A)
                        {
                            "onboard-1"
                        }
                    })
                }
亮度调节 ：

                Device (PNLF)
                {
                    Name (_ADR, Zero)
                    Name (_HID, EisaId ("APP0002"))
                    Name (_CID, "backlight")
                    Name (_UID, 0x0A)
                    Name (_STA, 0x0B)
                    OperationRegion (BRIT, SystemMemory, And (BAR1, 0xFFFFFFF0), 0x000E1184)
                    Field (BRIT, AnyAcc, Lock, Preserve)
                    {
                                Offset (0x48250), 
                        LEV2,   32, 
                        LEVL,   32, 
                                Offset (0x70040), 
                        P0BL,   32, 
                                Offset (0xC8250), 
                        LEVW,   32, 
                        LEVX,   32, 
                                Offset (0xE1180), 
                        PCHL,   32
                    }

                    Name (LMAX, 0x0710)
                    Name (KMAX, 0x0710)
                    Name (KPCH, Ones)
                    Method (_INI, 0, NotSerialized)
                    {
                        If (LNot (KPCH))
                        {
                            Store (PCHL, KPCH)
                        }

                        If (LNot (LMAX))
                        {
                            Store (ShiftRight (LEVX, 0x10), LMAX)
                        }

                        If (LNot (LMAX))
                        {
                            Store (KMAX, LMAX)
                        }

                        Store (ShiftLeft (LMAX, 0x10), KLVX)
                        If (LNotEqual (LMAX, KMAX))
                        {
                            Store (Zero, Local0)
                            While (LLess (Local0, SizeOf (_BCL)))
                            {
                                Store (DerefOf (Index (_BCL, Local0)), Local1)
                                Divide (Multiply (Local1, LMAX), KMAX, , Local1)
                                Store (Local1, Index (_BCL, Local0))
                                Increment (Local0)
                            }

                            Divide (Multiply (XRGL, LMAX), KMAX, , XRGL)
                            Divide (Multiply (XRGH, LMAX), KMAX, , XRGH)
                        }

                        Store (ShiftRight (LEVX, 0x10), Local1)
                        If (LNotEqual (Local1, LMAX))
                        {
                            Store (LEVL, Local0)
                            If (LOr (LNot (Local0), LNot (Local1)))
                            {
                                Store (LMAX, Local0)
                                Store (LMAX, Local1)
                            }

                            Divide (Multiply (Local0, LMAX), Local1, , Local0)
                            If (LGreater (LEVL, LMAX))
                            {
                                Store (KLVX, LEVX)
                                Store (Local0, LEVL)
                            }
                            Else
                            {
                                Store (Local0, LEVL)
                                Store (KLVX, LEVX)
                            }
                        }
                    }

                    Method (_BCM, 1, NotSerialized)
                    {
                        If (LAnd (LNotEqual (KPCH, Ones), LNotEqual (PCHL, KPCH)))
                        {
                            Store (KPCH, PCHL)
                        }

                        If (LNotEqual (LEVW, 0x80000000))
                        {
                            Store (0x80000000, LEVW)
                        }

                        If (LNotEqual (LEVX, KLVX))
                        {
                            Store (KLVX, LEVX)
                        }

                        Store (Match (_BCL, MGE, Arg0, MTR, Zero, 0x02), Local0)
                        If (LEqual (Local0, Ones))
                        {
                            Subtract (SizeOf (_BCL), One, Local0)
                        }

                        If (LNotEqual (LEV2, 0x80000000))
                        {
                            Store (0x80000000, LEV2)
                        }

                        Store (DerefOf (Index (_BCL, Local0)), LEVL)
                    }

                    Method (_BQC, 0, NotSerialized)
                    {
                        Store (Match (_BCL, MGE, LEVL, MTR, Zero, 0x02), Local0)
                        If (LEqual (Local0, Ones))
                        {
                            Subtract (SizeOf (_BCL), One, Local0)
                        }

                        Return (DerefOf (Index (_BCL, Local0)))
                    }

                    Method (_DOS, 1, NotSerialized)
                    {
                        ^^_DOS (Arg0)
                    }

                    Method (XBCM, 1, NotSerialized)
                    {
                        If (LAnd (LNotEqual (KPCH, Ones), LNotEqual (PCHL, KPCH)))
                        {
                            Store (KPCH, PCHL)
                        }

                        If (LNotEqual (LEVW, 0x80000000))
                        {
                            Store (0x80000000, LEVW)
                        }

                        If (LNotEqual (LEVX, KLVX))
                        {
                            Store (KLVX, LEVX)
                        }

                        If (LGreater (Arg0, XRGH))
                        {
                            Store (XRGH, Arg0)
                        }

                        If (LAnd (Arg0, LLess (Arg0, XRGL)))
                        {
                            Store (XRGL, Arg0)
                        }

                        If (LNotEqual (LEV2, 0x80000000))
                        {
                            Store (0x80000000, LEV2)
                        }

                        Store (Arg0, LEVL)
                    }

                    Method (XBQC, 0, NotSerialized)
                    {
                        Store (LEVL, Local0)
                        If (LGreater (Local0, XRGH))
                        {
                            Store (XRGH, Local0)
                        }

                        If (LAnd (Local0, LLess (Local0, XRGL)))
                        {
                            Store (XRGL, Local0)
                        }

                        Return (Local0)
                    }

                    Name (XOPT, 0x02)
                    Name (XRGL, 0x28)
                    Name (XRGH, 0x0710)
                    Name (KLVX, 0x07100000)
                    Name (_BCL, Package (0x43)
                    {
                        0x0710, 
                        0x01DF, 
                        Zero, 
                        0x35, 
                        0x37, 
                        0x39, 
                        0x3B, 
                        0x3E, 
                        0x42, 
                        0x47, 
                        0x4D, 
                        0x53, 
                        0x5B, 
                        0x63, 
                        0x6C, 
                        0x77, 
                        0x82, 
                        0x8E, 
                        0x9A, 
                        0xA8, 
                        0xB7, 
                        0xC6, 
                        0xD6, 
                        0xE8, 
                        0xFA, 
                        0x010D, 
                        0x0121, 
                        0x0135, 
                        0x014B, 
                        0x0162, 
                        0x0179, 
                        0x0191, 
                        0x01AA, 
                        0x01C5, 
                        0x01DF, 
                        0x01FB, 
                        0x0218, 
                        0x0236, 
                        0x0254, 
                        0x0273, 
                        0x0294, 
                        0x02B5, 
                        0x02D7, 
                        0x02FA, 
                        0x031D, 
                        0x0342, 
                        0x0368, 
                        0x038E, 
                        0x03B5, 
                        0x03DE, 
                        0x0407, 
                        0x0431, 
                        0x045B, 
                        0x0487, 
                        0x04B4, 
                        0x04E1, 
                        0x0510, 
                        0x053F, 
                        0x056F, 
                        0x05A0, 
                        0x05D2, 
                        0x0605, 
                        0x0638, 
                        0x066D, 
                        0x06A2, 
                        0x06D9, 
                        0x0710
                    })
                }
            }


///////////////////端口修正////////////////////////////
https://github.com/RehabMan/OS-X-Clover-Laptop-Config/blob/ac6a9cd61bcf1922ad7fe77568fc41540602396b/config_HD4000_1600x900.plist

                        <dict>
                <key>Comment</key>
                <string>HDMI-video, 64MB BIOS, HD4000 0x01660004 #1 of 2</string>
                <key>Disabled</key>
                <false/>
                <key>Name</key>
                <string>AppleIntelFramebufferCapri</string>
                <key>Find</key>
                <data>BABmAQEDAQEAAAAC</data>
                <key>Replace</key>
                <data>BABmAQECBAIAAAAE</data>
            </dict>
            <dict>
                <key>Comment</key>
                <string>HDMI-video, 64MB BIOS, HD4000 0x01660004 #2 of 2</string>
                <key>Disabled</key>
                <false/>
                <key>Name</key>
                <string>AppleIntelFramebufferCapri</string>
                <key>Find</key>
                <data>MAIAAAAAAAABAAAAQAAAAAAAAAABAAAAQAAAAAAAAAABAAAAQAAAAAAAAAAAAAAA</data>
                <key>Replace</key>
                <data>MAIAAAIFAAAABAAABwQAAAMEAAAABAAAgQAAAAQGAAAABAAAgQAAAAAAAAAAAgAR</data>
            </dict>
 
